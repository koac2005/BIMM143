---
title: "class_08_mini_project"

format: pdf
---

```{r}

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv("WisconsinCancer.csv", row.names = 1)
head(wisc.df)

```
```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
```

```{r}
wisc.data <- wisc.df[,-1]
head(wisc.data)

```


>Q1: How many observations are in this dataset?

A: 569 observations
```{r}
nrow(wisc.df)
```
>Q2: How many of the observations have a malignant diagnosis?

```{r}
table(wisc.df$diagnosis)

```
A: 212 Ms

>Q3: How many variables/features in the data are suffixed with _mean?

```{r}
colnames(wisc.data)
grep("_mean$", names(wisc.data))
```

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```
```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale = T)
summary(wisc.pr)
```



>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

```{r}
wisc.pr$sdev[1]^2/sum(wisc.pr$sdev^2)
```

>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

A: From looking at the data, we need 3 PCs, since PC3 is when cumulative variance > 0.7


>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

A: From looking at the data, we need 7 PCs, since PC7 is when cumulative variance > 0.9


>Q7. What stands out to you about this plot? Is ir easy or difficult to understand? Why?

```{r}
biplot(wisc.pr)
```
A: This looks difficult to understand. The results are way too clumped together, so it's not exactly easy to make out the details of the data. In addition, all of the labels overlap, resulting in them being mostly indecipherable.


```{r}
plot(wisc.pr$x[,1],wisc.pr$x[,2], col = diagnosis, pch=16)
```
>Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

A. The plot is certainly much neater. In addition, the benign and malignant cells are clustered together, which makes the difference between the two very apparent, unlike in the biplot.
```{r}
plot(wisc.pr$x[,1],wisc.pr$x[,3], col = diagnosis, pch=16, xlab="PC1", ylab = "PC3")
```

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()

```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```
```{r}
# Variance explained by each principal component: pve
pve <- wisc.pr$sdev^2 / sum(wisc.pr$sdev^2)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")

# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Percent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

A: This means the contribution of this feature to the first PC
```{r}
wisc.pr$rotation[,1]
```

>Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

A: The data shows again that cumulative proportion is only greater than 80% once we reach PC5, so 5 principal components can explain 80% of the variance of the data
```{r}
summary(wisc.pr)
```
```{r}
data.dist <- dist(scale(wisc.data))
```

```{r}
wisc.hclust <- hclust(data.dist, method="complete")
```
>Q11: Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

A: It looks to be at about a height of 19 or just under 20
```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=8)
table(wisc.hclust.clusters, diagnosis)
```
>Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

A: Yes, a cluster number of 8 shows that separates the previous large cluster 1 values into a new cluster 1 and 2 value that both have a similar amount of malignant diagnoses. Since a cluster number of 8 does not group and instead differentiates between the clusters, I think it matches better.

>Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

A: Probably the wardD2 one, which has the most structured looking plot compared to the other two, as well as having easier to see clusters.
```{r}
single <- hclust(data.dist, method="single")
plot(single)
hclust(data.dist, method="complete")
wisc.pr.hclust <- hclust(data.dist, method="ward.D2")
wisc.pr.hclust
plot(wisc.pr.hclust)
average <- hclust(data.dist, method="average")
average
plot(average)
```

## 5. Combining methods

This approach will take not original data but our PCA results and work with them.

```{r}
d <- dist(wisc.pr$x[,1:3])
wisc.pr.hclust <- hclust(d, method = "ward.D2")
plot(wisc.pr.hclust)

grps <- cutree(wisc.pr.hclust, k=2)
head(grps)
```

```{r}
table(grps)
table(diagnosis)
table(grps,diagnosis)
```
```{r}
plot(wisc.pr$x[,1:2], col=grps)
plot(wisc.pr$x[,1:2], col = diagnosis)
```
```{r}
g <- as.factor(grps)
levels(g)
```
```{r}
g <- relevel(g,2)
levels(g)
```
```{r}
plot(wisc.pr$x[,1:2], col = g)
```

```{r}
wisc.pr.hclust <- hclust(d, method="ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)

```

>Q15. How well does the newly created model with four clusters separate out the two diagnoses?

A: It separates them pretty well. Most of the malignant diagnoses are in cluster 1 and most of the benign ones are in cluster 2.
```{r}
table(wisc.pr.hclust.clusters,diagnosis)
```

